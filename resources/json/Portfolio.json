{
  "english": [
    { "id": "STPPart_1", "text": "This is a stress test application for pathfinding algorithm to find the shortest path between two points on a static grid. I have implemented in it the most popular pathfinding algorithms (Dijkstra, A*) as well as algorithms more suitable for specific cases (Greedy, B*)."},
	{ "id": "STPPart_2", "text": "This allows me to test the results and the search methodology of an algorithm in a visual rendering and to test its performance with different data structures on a large number of nodes."},
    { "id": "STPPart_3", "text": "I also made the same application on Unreal, but it is no longer updated on this engine." },
	{ "id": "ADPart_1", "text": "AmongDefense is an augmented reality tower defense game based on the AmongUs characters." },
    { "id": "ADPart_2", "text": "The game allows you to generate the game map through the ImageTracker or GroundDetection and start a game. It is also possible to pause the game and start another one just by moving elsewhere or detecting a new image." },
	{ "id": "ADPart_3", "text": "This project was developed in a course for one week with a team of 6 students. During this work, I was responsible for the wave timing management, the path creation tool, and the import and customization of the map and entities within it, as well as the sounds." },
    { "id": "DPart_1", "text": "Dwarfender is a tower defense game where you play as a dwarf who must repel waves of golems. The game was created using Unreal Engine 4 with Wwise for sound management and Perforce for collaboration." },
	{ "id": "DPart_2", "text": "This is the end-of-first-year project I was part of, with a team of about 25 people consisting of programmers, game designers, modelers, sound designers, riggers and animators." },
	{ "id": "DPart_3", "text": "In this work, I developed the level management and UI menus. I also prototyped the trap and tower construction grid and intervened in many programming areas during the debugging phase of the game." },
	{ "id": "SYRAPart_1", "text": "SYRA is an adventure and puzzle game that allows you to discover the heritage and history of the city of Saint-Yrieix la Perche through fun and interactive activities." },
	{ "id": "SYRAPart_2", "text": "The goal of the game is to search for the bust of Arédius, whose original relic is located in the museum in New York, throughout cultural and historical sites in the city center of Saint-Yrieix." },
	{ "id": "SYRAPart_3", "text": "Through augmented reality, it is possible to scan images to trigger a riddle." },
	{ "id": "SYRAPart_4", "text": "You must then solve the riddle by finding the clues present on the place and completing mini-games !" },
	{ "id": "BVRPart_1", "text": "BowlingVR is, as its name suggests, a VR game in which you play a game of Bowling. This game was developed during my second year of Gameplay Programming in a team of 6 programmers. The aim of the work was to reproduce the bowling mini-game from the \"WII Sport Resort\" game in one week." },
	{ "id": "BVRPart_2", "text": "During this development, I added and updated the game's environment and models to fit our needs. I also implemented the game's re-launch mechanic and participated in debugging most of the game's features including the UI and the management of the pins."},
    { "id": "CPart_1", "text": "Canon is a mini-game made during the first year of Gameplay programming, the game is developed in C++ with the SFML graphics library." },
	{ "id": "CPart_2", "text": "The goal of the game is to repel waves of enemies that are trying to invade you. Once a certain amount of XP is obtained, you can choose an upgrade, but every upgrade for you results in an upgrade for your enemies too." },
    { "id": "CPart_3", "text": "I completed almost the entire project, from the canon and its shot to the movement of the enemy, whether it is land-based or flying. I was able to redevelop typical features of today's engines such as sprite sheets, for example." },
	{ "id": "MPart_1", "text": "My Monopoly project was an exam for my second year of Gameplay Programming. The goal was clear, to recreate a classic and simplified Monopoly game in one week while emphasizing code modularity and adherence to SOLID principles." },
    { "id": "MPart_2", "text": "Since this was an exam, I fully implemented the programming part of the game, from the board to property management, to event cell management" },
	{ "id": "SPart_1", "text": "This is the latest version of my portfolio, like previous ones, I developed the entire site using React and favoring the JSX syntax and the use of hooks." },
	{ "id": "SPart_2", "text": "This time I added the language selection and some automatic features to facilitate the update of the website." },
	{ "id": "TCPart_1", "text": "This is a tool to group several textures into one, forming a composite texture, which is very practical in the video game industry. Specifically, the tool will take each texture that is assigned to a channel and inject it into that channel." },
	{ "id": "TCPart_2", "text": "This way, we can get a composite texture like SRDAO, where S is the specular located in the red channel, R is the roughness found in the green channel, etc." },
	{ "id": "TCPart_3", "text": "The graphical interface was made with WPF and the logical part in C#." },
	{ "id": "GOLPart_1", "text": "The game of life is an application that I had to develop for a test at a school." },
	{ "id": "GOLPart_2", "text": "It is a modified version of John Conway's famous cellular automaton. In this version, we imagine animals and plants rather than cells." },
	{ "id": "GOLPart_3", "text": "This version was an excellent training in object-oriented programming, through this project, I was able to apply my knowledge on the principles of object-oriented (encapsulation, inheritance etc) and at the same time test new design patterns, including Object Pooling." },
	{ "id": "UBGPart_1", "text": "Unity Binded Graphics (UBG) is a library that offer you the ability to create simple UI elements that draws a specific value selected by the user." },
	{ "id": "UBGPart_2", "text": "This plugin used the reflection and create specific generic method at runtime in order to connect any member from a MonoBehaviour class to an UI."},
    { "id": "UBGPart_3", "text": " I learned a lot during every step of the development, this tool offered me a chance to study runtime method creation, AOT (Ahead of Time) and JIT (Just in Time) compilers, the purpose of a Linker and how a compiler strips useless code during the compilation." }
  ],
  "french": [
    { "id": "STPPart_1", "text": "Il s'agit d'une application de stress test d'algorithme de résolution du plus court chemin entre deux points sur une grille statique. J'ai implémenté dedans les algorithmes de pathfinding les plus populaires (Djikstra, A*) ainsi que des algorithmes plus propices à des cas particuliers (Greedy, B*)." },
	{ "id": "STPPart_2", "text": "L'application me permet donc de tester les résultats d'un algorithme et sa méthodologie de recherche dans un rendu visuel et de tester les performances de celui-ci avec différentes structures de données sur un nombre important de noeuds."},
    { "id": "STPPart_3", "text": "J'ai réalisé la même application sur Unreal, mais celle-ci n'est plus mis à jour sur ce moteur." },
	{ "id": "ADPart_1", "text": "AmongDefense est un tower defense en réalité augmentée et basé sur les personnages AmongUs." },
    { "id": "ADPart_2", "text": "Le jeu permet de générer la map de jeu via l'ImageTracker ou le GroundDetection et de lancer une partie. Il est aussi possible de mettre en pause la partie et dans lancer une autre à côté, juste en se déplaçant ailleurs ou en détectant une nouvelle image." },
	{ "id": "ADPart_3", "text": "Ce projet a été développé en cours pendant une semaine avec une équipe de 6 étudiants. Durant ce travail, je me suis chargé de la gestion du temps des vagues, de l'outil de création de chemin, et de l'importation et personnalisation de la carte et des entités présentes dans celle-ci, ainsi que les sons." },
    { "id": "DPart_1", "text": "Dwarfender est un tower defense où l'on incarne un nain qui doit repousser des vagues de golems. Le jeu a été réalisé sous Unreal Engine 4 avec Wwise pour la gestion des sons et Perforce pour la collaboration." },
	{ "id": "DPart_2", "text": "Il s'agit du projet de fin de première année, auquel j'ai pris part dans une équipe d'environ 25 personnes, composé de programmeurs, game designers, modeleurs, sound designers, riggers et d'animateurs." },
	{ "id": "DPart_3", "text": "Sur ce travail, j'ai développé la gestion des niveaux, et les menus de l'IU. J'ai également pu prototypé la grille de construction des pièges et des tours et intervenir sur pas mal de domaine de programmation lors de la phase de débug du jeu." },
	{ "id": "SYRAPart_1", "text": "SYRA est un jeu d’aventure et d’énigmes proposant de découvrir le patrimoine et l’histoire de la ville de Saint-Yrieix la Perche via des activités ludiques et interactives." },
	{ "id": "SYRAPart_2", "text": "Le but du jeu est de partir à la recherche du buste d'Arédius, dont la relique originale se trouve au musée de New York, dans le centre-ville de Saint-Yrieix en passant par des lieux culturelles et historiques." },
	{ "id": "SYRAPart_3", "text": "Via la réalité augmentée, il est possible de scanner des images pour déclencher une énigme." },
	{ "id": "SYRAPart_4", "text": "Il faut alors résoudre l'énigme en trouvant les indices présents sur le lieu et en accomplissant des minis-jeux !" },
	{ "id": "BVRPart_1", "text": "BowlingVR est, comme son nom l'indique, un jeu VR dans lequel vous faîtes une partie de Bowling. Ce jeu a été réalisé durant ma deuxième année de GameplayProgramming dans une équipe de 6 programmeurs. Le but du travail était de reproduire le mini-jeu de bowling du jeu \"WII Sport Resort\" en une semaine." },
	{ "id": "BVRPart_2", "text": "Durant ce développement, j'ai ajouté et mis à jour l'environnement et les modèles du jeu de l'époque afin de les adapter à nos besoins. J'ai aussi implémenté la mécanique de relance du jeu et participer au débugage de la plupart des fonctionnalités du jeu dont l'UI, et la gestion des quilles."},
    { "id": "CPart_1", "text": "Canon est un mini-jeu réalisé durant la première année de Gameplay programming, le jeu est développé en C++ avec la librairie graphique SFML." },
	{ "id": "CPart_2", "text": "Le but du jeu est de repousser des vagues d'ennemies qui essayent de vous envahir, une fois une certaine quantité d'XP obtenu, vous pouvez choisir une amélioration, mais chaque amélioration pour vous, entraîne une amélioration chez vos ennemis." },
    { "id": "CPart_3", "text": "J'ai réalisé la quasi intégralité ce projet, du canon et son tir de boulet au déplacement de l'ennemi, qu'il soit terrestre ou volant. J'ai ainsi pu redévelopper des fonctionnalités classiques des moteurs d'aujouurd'hui comme les sprites sheets par exemple." },
	{ "id": "MPart_1", "text": "Monopoly est le projet d'examen de ma deuxième année de Gameplay Programming. le but est limpide, il fallait reproduire un monopoly classique et un peu simplifié en une semaine tout en favorisant la modualrité du code et le respect des principes SOLID." },
    { "id": "MPart_2", "text": "Étant donné qu'il s'agissait d'un examen, j'ai entièrement implémenté la partie programmation du jeu, du plateau de jeu à la gestion des propriétés, en passant la gestion des cases événementiels." },
	{ "id": "SPart_1", "text": "Dernière version de mon portfolio, comme les précédentes, j'ai développé l'intégralité de ce site avec React et en favorisant la syntaxe JSX et l'utilisation des hooks." },
	{ "id": "SPart_2", "text": "J'ai cette fois-ci rajouté la sélection de la langue et quelques fonctionnalités automatiques pour faciliter la mise à jour du site." },
	{ "id": "TCPart_1", "text": "C'est un outil pour regrouper plusieurs textures en une seule, et ainsi former un texture composée, très pratique dans l'industrie du jeux-vidéo. Plus précisément, l'outil va prendre chaque texture qui est assigné à un canal et l'injecter dans ce canal." },
	{ "id": "TCPart_2", "text": "On peut ainsi obtenir une texture composée SRDAO par exemple, où S est la spéculaire qui se situe dans le canal rouge, R la rugosité qui se trouve dans le canal vert etc." },
	{ "id": "TCPart_3", "text": "L'interface graphique a été réalisé avec WPF et la partie logique en C#." },
	{ "id": "GOLPart_1", "text": "Le jeu de la vie est une application que j'ai eu à réaliser à l'occasion d'un test pour une école." },
	{ "id": "GOLPart_2", "text": "Il s'agit d'une version modifiée du célèbre automate cellulaire de John Conway. Dans cette version, on imagine des animaux et des végétaux plutôt que des cellules." },
	{ "id": "GOLPart_3", "text": "Cette version était un excellent entraînement à la programmation orienté objet, à travers ce projet, j'ai pu appliquer mes connaissances sur les principes de l'orienté objet (encapsulation, héritage etc) et en même temps tester des nouveaux patterns de conception, dont l'Object Pooling." },
	{ "id": "UBGPart_1", "text": "Unity Binded Graphics (UBG) est une bibliothèque qui vous offre la possibilité de créer des éléments d'interface utilisateur simples qui affichent une valeur spécifique sélectionnée par l'utilisateur." },
	{ "id": "UBGPart_2", "text": "Ce plugin utilise la réflexion et crée des méthodes génériques spécifiques au moment de l'exécution afin de connecter n'importe quel membre d'une classe MonoBehaviour à une interface utilisateur."},
    { "id": "UBGPart_3", "text": "J'ai beaucoup appris à chaque étape du développement. Cet outil m'a offert l'opportunité d'étudier la création de méthodes au moment de l'exécution, les compilateurs AOT (Ahead of Time) et JIT (Just In Time), le rôle d'un linker et comment un compilateur élimine le code inutile pendant la compilation." }
  ]
}